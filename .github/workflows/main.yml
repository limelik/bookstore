name: CI Pipeline - Build, Scan & Push

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-scan-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Build Docker images for each service using their Dockerfile.dev
      - name: Build Server Image
        run: |
          docker build -f server/Dockerfile.dev -t bookstore_server:latest server
      
      - name: Build Client Image
        run: |
          docker build -f client/Dockerfile.dev -t bookstore_client:latest client
      
      - name: Build Nginx Image
        run: |
          docker build -f nginx/Dockerfile.dev -t bookstore_nginx:latest nginx

      # Run vulnerability scans on each built image using Trivy
      - name: Scan Server Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: bookstore_server:latest
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true

      - name: Scan Client Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: bookstore_client:latest
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true

      - name: Scan Nginx Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: bookstore_nginx:latest
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true

      # OPTIONAL: Push images to AWS ECR
      - name: Login to AWS ECR
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Tag and Push Server Image to ECR
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          ECR_REPOSITORY_SERVER: ${{ secrets.ECR_REPOSITORY_SERVER }}
        run: |
          docker tag bookstore_server:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_SERVER:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_SERVER:latest

      - name: Tag and Push Client Image to ECR
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          ECR_REPOSITORY_CLIENT: ${{ secrets.ECR_REPOSITORY_CLIENT }}
        run: |
          docker tag bookstore_client:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_CLIENT:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_CLIENT:latest

      - name: Tag and Push Nginx Image to ECR
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          ECR_REPOSITORY_NGINX: ${{ secrets.ECR_REPOSITORY_NGINX }}
        run: |
          docker tag bookstore_nginx:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NGINX:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NGINX:latest
