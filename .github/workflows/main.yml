name: CI Pipeline - Build, Scan & Deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  docker-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch that sweet repo code
        uses: actions/checkout@v3

      - name: Build Server Image
        run: docker build -f server/Dockerfile.dev -t bookstore_server:latest server

      - name: Build Client Image
        run: docker build -f client/Dockerfile.dev -t bookstore_client:latest client

      - name: Build Nginx Image
        run: docker build -f nginx/Dockerfile.dev -t bookstore_nginx:latest nginx

      - name: Setting Up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Logging into AWS ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Tag & Push Server Image
        run: |
          docker tag bookstore_server:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_SERVER }}:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_SERVER }}:latest

      - name: Tag & Push Client Image
        run: |
          docker tag bookstore_client:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_CLIENT }}:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_CLIENT }}:latest

      - name: Tag & Push Nginx Image
        run: |
          docker tag bookstore_nginx:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NGINX }}:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NGINX }}:latest

      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > my-key-pair.pem
          chmod 600 my-key-pair.pem

      - name: Copy docker-compose.yml to EC2 instance
        run: |
          scp -i my-key-pair.pem -o StrictHostKeyChecking=no docker-compose.yml ec2-user@${{ secrets.EC2_PUBLIC_IP }}:/home/ec2-user/docker-compose.yml

      - name: Run docker-compose on EC2 instance
        run: |
          ssh -i my-key-pair.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} "docker-compose -f /home/ec2-user/docker-compose.yml up -d"